#!/usr/bin/env bash

ARCHIVES_DIR='docs/archives'

usage() {
    echo "Usage: ${0##*/} <command>" >&2
}

msg-info() {
    echo "$(tput setab 4) Info  $(tput sgr0) $(cat)"
}

msg-error() {
    echo "$(tput setab 1) Error $(tput sgr0) $(cat)"
}

cmd-create() {
    msg-info <<< '記事を作成します...'

    local status

    local appname="${0##*/}"
    local dir="$(basename $(pwd))"
    if [[ "$appname" != "$dir" ]]; then
        msg-error <<< "$appname ディレクトリの直下で実行してください"
        exit 1
    fi

    local today="$(date +"%Y/%m/%d")"
    local article_dir="$ARCHIVES_DIR/$today"
    mkdir -p "$article_dir"
    status="$?"
    if [[ "$status" != 0 ]]; then
        msg-error <<< '記事ディレクトリの作成に失敗しました'
        exit 1
    fi

    local article="$article_dir/README.md"
    touch "$article"
    status="$?"
    if [[ "$status" != 0 ]]; then
        msg-error <<< '記事ファイルの作成に失敗しました'
        exit 1
    fi

    if [[ -s "$article" ]]; then
        read -p "ファイル($article)が既に存在するようです。上書きしますか?(y/N): " confirm
        case "$confirm" in
            [yY]*)
                ;;

            *)
                msg-error <<< '処理を中止します'
                exit 1
                ;;
        esac
    fi

    {
        echo '---'
        echo "date: $(date +"%Y/%m/%d")"
        echo 'title:'
        echo 'description:'
        echo '---'
        echo '<span style="font-size: 10pt; font-weight: bold; color: #3297bf">{{ $frontmatter.date }}</span>'
        echo
        echo '# {{ $frontmatter.title }}'
    } > "$article"

    echo >&2
    msg-info <<< "記事ファイルを作成しました: $article"
}

cmd-tweet() {
    if [[ $(command -v t) != "/usr/local/bin/t" ]]; then
        msg-error <<< 'tコマンドをgit clone & /usr/local/binにコピーしてください'
        exit 1
    fi

    local today="$(date +"%Y/%m/%d")"
    local target_article="docs/archives/$today/README.md"

    if [[ ! -e "$target_article" ]]; then
        msg-error <<< "記事が存在しません: $target_article"
        exit 1
    fi

    local title=$(awk '/title:/{
        sub(/title:\s*/, "");
        print;
    }' <<< $(cat "$target_article"))

    local url="https://wassan128.github.io/penguin-signpost/archives/$today"

    read -p "ツイートを投稿して問題ないですか?(y/N): " confirm
    case "$confirm" in
        [yY]*)
            ;;

        *)
            msg-error <<< '処理を中止します'
            exit 1
            ;;
    esac

    t --text="かいた/$title $url"
}

penguin-signpost() {
    local subcommand="$1"

    case "$subcommand" in

        'create')
            cmd-create
            ;;

        'tweet')
            cmd-tweet
            ;;

        *)
            usage
            exit 1
            ;;

    esac
}

penguin-signpost "$@"
